<!DOCTYPE html>
<html lang="en">
<head>
    <title>{{.Account.Name}}</title>
    <style>
        table {
            border-collapse: collapse;
        }
        th, td {
            border: 1px solid black;
            padding: 10px;
        }
    </style>
</head>
<body>
<h1>{{.account.Name}}</h1>
<div>
    <p>Current Balance: $<span id="currentBalance">{{.account.Balance}}</span>
        <button>Rebalance</button>
    </p>
</div>
<div>
    <label for="newBalance">New balance:</label>
    <input type="number" id="newBalance" name="newBalance" oninput="calculateDelta()">
</div>
<div>
    <p>Pending delta: $<span id="pendingDelta">0.00</span></p>
</div>
<div>
    <form id="transactionForm">
        <label for="description">Description:</label>
        <input type="text" id="description" name="description" required>

        <label for="amount">Amount:</label>
        <input type="number" step="0.01" id="amount" name="amount" required>

        <label for="category">Category:</label>
        <select id="category" name="category" required>
            <!-- Add your categories here -->
            <option value="none">None</option>
            <option value="adventurer_explorer">Adventurer/Explorer</option>
            <option value="career_champion">Career Champion</option>
            <option value="code_collaborator">Code Collaborator</option>
            <option value="community_hero">Community Hero</option>
            <option value="devoted_partner">Devoted Partner</option>
            <option value="family_anchor">Family Anchor</option>
            <option value="health_advocate">Health Advocate</option>
            <option value="inspired_creator">Inspired Creator</option>
            <option value="lifelong_learner">Lifelong Learner</option>
            <option value="responsible_steward">Responsible Steward</option>
            <option value="social_connector">Social Connector</option>
            <option value="soul_nurturer">Soul Nurturer</option>
            <option value="spiritual_seeker">Spiritual Seeker</option>
            <option value="trusted_friend">Trusted Friend</option>
            <option value="visionary_leader">Visionary Leader (Business)</option>
            <option value="visionary_planner">Visionary Planner</option>
            <option value="wealth_guardian">Wealth Guardian</option>
        </select>

        <button type="submit">Add Transaction</button>
    </form>
</div>
<h2>Transactions</h2>
<table>
    <thead>
    <tr>
        <th>Description</th>
        <th>Category</th>
        <th>Amount</th>
        <th>Action</th>
    </tr>
    </thead>
    <tbody>
    {{range .transactions}}
    <tr>
        <td>{{.Description}}</td>
        <td>{{.Category}}</td>
        <td>${{printf "%.2f" .Amount}}</td>
        <td><button onclick="deleteTransaction('{{.ID}}')">Delete</button></td>
    </tr>
    {{end}}
    </tbody>
</table>

</body>

<script>

    function deleteTransaction(transactionID) {
        var confirmed = confirm('Are you sure you want to delete this transaction?');
        if (!confirmed) {
            return;
        }
        fetch('/transactions/'+transactionID, {
            method: 'DELETE',
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                location.reload()
            })
            .catch((error) => {
                console.error('Error:', error);
                alert('Failed to delete transaction: ' + error.message);
            });
    }

    function calculateDelta() {
        var currentBalance = parseFloat(document.getElementById('currentBalance').textContent);
        var newBalance = parseFloat(document.getElementById('newBalance').value);
        var delta = newBalance - currentBalance;
        document.getElementById('pendingDelta').textContent = delta.toFixed(2);
    }

    function initPage(){
        calculateDelta();
        document.getElementById('description').focus();
    }

    document.addEventListener('DOMContentLoaded', initPage);

    document.getElementById('transactionForm').addEventListener('submit', function(event) {
        event.preventDefault();

        var description = document.getElementById('description').value;
        var amount = document.getElementById('amount').value;
        var category = document.getElementById('category').value;
        var accountId = "{{.account.ID}}";

        var transaction = {
            description: description,
            amount: parseFloat(amount),
            category: {
                name: category,
                is_new: false
            },
            account_id: accountId
        };

        fetch('/transactions', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(transaction)
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                location.reload();
                document.getElementById('transactionForm').reset();
            })
            .catch((error) => {
                console.error('Error:', error);
                alert('Failed to add transaction: ' + error.message);
            });
    });
</script>
</html>